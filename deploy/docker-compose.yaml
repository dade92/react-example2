services:
  frontend:
    image: davide92/react-example2
    container_name: frontend
#  backend:
#    image: davide92/spring-example2
#    container_name: backend
#    depends_on:
#      - mongo
#    restart:
#      always
#  mongo:
#    image: mongo
#    container_name: mongo
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: password
#    volumes:
#      - ./local-env/database/db:/data/db
#      - ./local-env/database/dev.archive:/Databases/dev.archive
#      - ./local-env/database/production:/Databases/production
#  mongo-express:
#    image: mongo-express
#    container_name: mongo-express
#    restart: unless-stopped
#    ports:
#      - "8081:8081"
#    links:
#      - mongo
#    environment:
#      ME_CONFIG_MONGODB_ADMINUSERNAME: root
#      ME_CONFIG_MONGODB_ADMINPASSWORD: password
#      ME_CONFIG_MONGODB_PORT: 27017
#      ME_CONFIG_MONGODB_SERVER: mongo
  proxy:
    image: davide92/reverse-proxy
    container_name: proxy
    restart: always
    ports:
      - "80:80"
    # TODO substitute with a proper /alive endpoint
    healthcheck:
      test: [ "CMD", "wget", "-qO-", "http://raspberrypi:8080/translations/en" ]
      interval: 5s
      timeout: 3s
      retries: 3